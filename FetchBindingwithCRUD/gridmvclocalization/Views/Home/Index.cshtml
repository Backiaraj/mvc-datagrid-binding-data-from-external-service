
<div>
    @Html.EJS().Button("btn").Content("Bind data via Fetch").CssClass("e-primary").Render()

    @Html.EJS().Grid("Grid").EditSettings(e => { e.AllowAdding(true).AllowEditing(true).AllowDeleting(true); }).Columns(col =>
    {
        col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("130").Add();
        col.Field("EmployeeID").HeaderText("Employee ID").Width("150").Add();
        col.Field("CustomerID").HeaderText("CustomerID").Width("70").Add();
        col.Field("ShipCity").HeaderText("Ship City").Width("70").Add();

    }).AllowPaging(true).AllowSorting(true).ActionComplete("actionComplete").ActionBegin("actionBegin").Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()
</div>

<script>
    let button = document.getElementById('btn');
    button.addEventListener("click", function (e) {
        let fetch = new ej.base.Fetch("/Home/Getdata", "POST");
        fetch.send();
        fetch.onSuccess = function (data) {
            var grid = document.getElementById('Grid').ej2_instances[0];
            grid.dataSource = ej.data.DataUtil.parse.parseJson(data);
        };
    });
</script>

<script>
    var flag = false;
    function actionBegin(e) {
        // Initially flag needs to be false in order to enter this condition
        if (!flag) {
            var grid = document.getElementById('Grid').ej2_instances[0];
            // Add and edit operations
            if (e.requestType == 'save' && (e.action == 'add')) {
                var editedData = e.data;
                // The default edit operation is cancelled
                e.cancel = true;
                // Here you can send the updated data to your server using fetch call
                var fetch = new ej.base.Fetch({
                    url: '/Home/Insert',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ value: editedData })
                });
                fetch.onSuccess = (args) => {
                    // Flag is enabled to skip this execution when grid ends add/edit
                    flag = true;
                    // The added/edited data will be saved in the Grid
                    grid.endEdit();
                }
                fetch.onFailure = (args) => {
                    // Add/edit failed
                    // The flag is disabled if operation is failed so that it can enter the condition on next execution
                    flag = false;
                }
                fetch.send();
            }
            if (e.requestType == 'save' && (e.action == 'edit')) {
                var editedData = e.data;
                // The default edit operation is cancelled
                e.cancel = true;
                // Here you can send the updated data to your server using fetch call
                var fetch = new ej.base.Fetch({
                    url: '/Home/Update',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ value: editedData })
                });
                fetch.onSuccess = (args) => {
                    // Flag is enabled to skip this execution when grid ends add/edit
                    flag = true;
                    // The added/edited data will be saved in the Grid
                    grid.endEdit();
                }
                fetch.onFailure = (args) => {
                    // Add/edit failed
                    // The flag is disabled if operation is failed so that it can enter the condition on next execution
                    flag = false;
                }
                fetch.send();
            }
            if (e.requestType == 'delete') {
                var editedData = e.data;
                // The default delete operation is cancelled
                e.cancel = true;
                // Here you can send the deleted data to your server using fetch call
                var fetch = new ej.base.Fetch({
                    url: '/Home/Delete',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ key: editedData[0][grid.getPrimaryKeyFieldNames()[0]] })
                })
                fetch.onSuccess = (args) => {
                    // Flag is enabled to skip this execution when grid deletes record
                    flag = true;
                    // The deleted data will be removed in the Grid
                    grid.deleteRecord();
                }
                fetch.onFailure = (args) => {
                    // Delete failed
                    // The flag is disabled if operation is failed so that it can enter the condition on next execution
                    flag = false;
                }
                fetch.send();
            }
        }
    }

    function actionComplete(e) {
        if (e.requestType === 'save' || e.requestType === 'delete') {
            // The flag is disabled after operation is successfully performed so that it can enter the condition on next execution
            flag = false;
        }
    }
</script>
